h1. In-Field Labels jQuery Plugin

*License:* "Same as jQuery (Dual GPL + MIT)":http://docs.jquery.com/License

*Fork By:* "Paul Elliott":http://blog.codingfrontier.com

*Original Author:* "Doug Neiner":http://pixelgraphics.us/company

*Size:* Under 1KB Minified and gzipped

h2. Differences from Master

I loved this plugin, but as I started to roll it out on my site I quickly found that having to set up the label, input, and container a certain way with certain css was complicating some of my existing screen designs.  I modified the plugin to instead act on the input itself, so instead of selecting the labels and attaching them to the inputs, you can select the input(s) and specify the text to be applied.

It will automatically position the label it creates for you over the input element, no matter where in the DOM it is or how it is positioned.  It also calculates the margin, border, and padding of the input and sets its own padding attribute to match so that the text will correctly line up over the input's text.  All you need to do is make sure the text styling of "label.infieldlabel" is correct in your stylesheet.

h2. Overview

This is a simple plugin that turns properly formatted HTML forms into forms with in-field label support. Labels fade when the field is focussed and disappear when text entry begins. Clearing a field and leaving brings back the label.

h2. Browser Support

IE6+, WebKit Browsers (Safari, Chrome), Firefox 2+

&#42; IE6 requires a background-color be set on the label to match the background of the field.

h2. Know Issues

Browser Auto-Complete can cause problems in hiding the labels. Less of an issue for Login Boxes, but much more of an issue with comment forms.

h2. Use

h3. HTML

<pre>
<p>
  <input type="text" name="email" value="" id="email">
</p>
</pre>

h3. Javascript

<pre>
$(function(){
  $("#email").inFieldLabels("email");
});
</pre>

h2. API

You can call the plugin in one of four ways, depending on what you are asking it to do.

To get a handle to the label on a particular input:

<pre>$(":input").inFieldLabels("get");</pre>

To remove the label from a particular input:

<pre>$(":input").inFieldLabels("remove");</pre>

To create a label on an input with specified text:

<pre>$(":input").inFieldLabels("your label text");</pre>
OR
<pre>$(":input").inFieldLabels({ text: "your label text"});</pre>

Note that if you wanted to apply "get" or "remove" as the text, then you would need to use the options syntax and pass in an object.

h2. Options

Two options can be passed along with the method or set ahead of time for all inFieldLabel controls.

To set them ahead of time, use the following syntax:

<pre>$.inFieldLabels.defaultOptions.optionName = "";</pre>

To pass them at call time, use the following syntax:

<pre>$("label").inFieldLabels({ optionName:value });</pre>

*<code>fadeOpacity:</code> Value between 0.1 and 1.0*
When a field is focussed, its label is animated to this opacity. Defaults to 0.5

*<code>fadeDuration:</code> Time in milliseconds*
When an animation occurs, it uses this setting to determine duration. Defaults to 300

*<code>padding:</code> Custom padding to add to the hovered label*
This is set just like a normal css padding attribute.  Alternatively, you can set this to false and specify it in the css via label.infieldlabel. Defaults to true, which will cause the plugin to attempt to calculate this automatically.
